MetaInfo {
Type {
        name: "Switch"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Switch"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"

            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 60; }
            Property { name: "height"; type: "int"; value: 40; }
            Property { name: "imageOff"; type: "QUrl"; value: "images/internal_button_dn.bmp"; }
            Property { name: "imageOn"; type: "QUrl"; value: "images/internal_button_up.bmp"; }
            Property { name: "textOff"; type: "string"; value: "Off"; }
            Property { name: "textOffFontFamily"; type: "string"; value: "Arial"; }
            Property { name: "textOffBold"; type: "bool"; value: false; }
            Property { name: "textOffColor"; type: "string"; value: "Black"; }
            Property { name: "textOffFontSize"; type: "int"; value: 14; }
            Property { name: "textOn"; type: "string"; value: "On"; }
            Property { name: "textOnFontFamily"; type: "string"; value: "Arial"; }
            Property { name: "textOnBold"; type: "bool"; value: false; }
            Property { name: "textOnColor"; type: "string"; value: "Black"; }
            Property { name: "textOnFontSize"; type: "int"; value: 14; }
            Property { name: "on"; type: "bool"; value: false; }
        }        
    }



Type {
        name: "ImageButton"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Image Button"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"

            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 60; }
            Property { name: "height"; type: "int"; value: 40; }
            Property { name: "imageDown"; type: "QUrl"; value: "images/internal_button_dn.bmp"; }
            Property { name: "imageUp"; type: "QUrl"; value: "images/internal_button_up.bmp"; }
            Property { name: "text"; type: "string"; value: "Test"; }
            Property { name: "textColor"; type: "string"; value: "Black"; }
            Property { name: "font.family"; type: "string"; value: "Arial"; }
            Property { name: "font.bold"; type: "bool"; value: false; }
            Property { name: "font.pixelSize"; type: "int"; value: 18; }

        }
    }

Type {
        name: "HorizontalLevelIndicator"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Level Indicator - Horizontal"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"

            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 200; }
            Property { name: "height"; type: "int"; value: 20; }
            Property { name: "startPosition"; type: "string"; value: "left"; }
            Property { name: "imageBase"; type: "QUrl"; value: "images/tank.png"; }
            Property { name: "imageOverlay"; type: "QUrl"; value: "images/tank_overlay.png"; }
            Property { name: "offset"; type: "int"; value: 0; }
            Property { name: "increment"; type: "int"; value: 4; }
            Property { name: "minValue"; type: "int"; value: 0; }
            Property { name: "maxValue"; type: "int"; value: 10; }
            Property { name: "value"; type: "int"; value: 0; }
        }
    }

Type {
        name: "VerticalLevelIndicator"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Level Indicator - Vertical"
            category: "Reach Components"
            libraryIcon: "item-icon.png"            
            forceImport: "true"

            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 28; }
            Property { name: "height"; type: "int"; value: 161; }
            Property { name: "startPosition"; type: "string"; value: "bottom"; }
            Property { name: "imageBase"; type: "QUrl"; value: "images/level.png"; }
            Property { name: "imageOverlay"; type: "QUrl"; value: "images/level_overlay.png"; }
            Property { name: "offset"; type: "int"; value: 11; }
            Property { name: "increment"; type: "int"; value: 9; }
            Property { name: "minValue"; type: "int"; value: 0; }
            Property { name: "maxValue"; type: "int"; value: 18; }
            Property { name: "value"; type: "int"; value: 0; }
        }
    }

Type {
        name: "CheckBoxList"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "CheckBox List"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            requiredImport: "components"
            forceImport: "true"
            Property { name: "imageUnChecked"; type: "string"; value: "images/checkbox_unchecked.svg"; }
            Property { name: "imageChecked"; type: "string"; value: "images/checkbox_checked.svg"; }
            Property { name: "font.family"; type: "string"; value: "Arial"; }
            Property { name: "font.bold"; type: "bool"; value: false; }
            Property { name: "font.pixelSize"; type: "int"; value: 16; }
            Property { name: "textColor"; type: "string"; value: "Black"; }
        }
    }

Type {
        name: "RadioButtonList"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "RadioButton List"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            requiredImport: "components"
            forceImport: "true"
            Property { name: "imageUnChecked"; type: "string"; value: "images/radio_checked.svg"; }
            Property { name: "imageChecked"; type: "string"; value: "images/radio_unchecked.svg"; }
            Property { name: "font.family"; type: "string"; value: "Arial"; }
            Property { name: "font.bold"; type: "bool"; value: false; }
            Property { name: "font.pixelSize"; type: "int"; value: 16; }
            Property { name: "textColor"; type: "string"; value: "Black"; }
        }
    }

Type {
        name: "Spinner"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Spinner"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"
            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 100; }
            Property { name: "height"; type: "int"; value: 216; }
            Property { name: "initialIndex"; type: "int"; value: 0; }
            Property { name: "itemHeight"; type: "int"; value: 29; }
            Property { name: "backGroundImage"; type: "QUrl"; value: "images/spinner-bg.png"; }
            Property { name: "highlightImage"; type: "QUrl"; value: "images/spinner-select.png"; }
            Property { name: "textColor"; type: "string"; value: "Black"; }
            Property { name: "font.bold"; type: "bool"; value: false; }
            Property { name: "font.pixelSize"; type: "int"; value: 25; }
            Property { name: "font.family"; type: "string"; value: "Arial"; }
            Property { name: "color"; type: "string"; value: "White"; }
            Property { name: "border.color"; type: "string"; value: "Black"; }
            Property { name: "border.width"; type: "int"; value: 3; }
            Property { name: "radius"; type: "int"; value: 2; }
        }
    }

Type {
        name: "AnimatedSwitch"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Animated Switch"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"
            requiredImport: "components"

            Property { name: "width"; type: "int"; value: 130; }
            Property { name: "height"; type: "int"; value: 56; }
            Property { name: "textOn"; type: "string"; value: "On"; }
            Property { name: "textOnX"; type: "int"; value: 18; }
            Property { name: "textOff"; type: "string"; value: "Off"; }
            Property { name: "textOffX"; type: "int"; value: 78; }
            Property { name: "on"; type: "bool"; value: false; }
            Property { name: "imageOff"; type: "QUrl"; value: "images/background.svg"; }
            Property { name: "imageOffWidth"; type: "int"; value: 130; }
            Property { name: "imageOffHeight"; type: "int"; value: 56; }
            Property { name: "imageOn"; type: "QUrl"; value: ""; }
            Property { name: "sliderImage"; type: "QUrl"; value: "images/knob.svg"; }
            Property { name: "sliderImageY"; type: "int"; value: 2; }
            Property { name: "sliderImageOnX"; type: "int"; value: 1; }
            Property { name: "sliderImageOffX"; type: "int"; value: 78; }
            Property { name: "textColor"; type: "string"; value: "White"; }
            Property { name: "font.bold"; type: "bool"; value: false; }
            Property { name: "font.pixelSize"; type: "int"; value: 22; }
            Property { name: "font.family"; type: "string"; value: "Georgia"; }

        }
    }

Type {
        name: "SwitchGroup"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Switch Group"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"
            requiredImport: "components"
            Property { name: "imageOff"; type: "QUrl"; value: "images/internal_button_dn.bmp"; }
            Property { name: "imageOn"; type: "QUrl"; value: "images/internal_button_up.bmp"; }
            Property { name: "font.family"; type: "string"; value: "Arial"; }
            Property { name: "font.bold"; type: "bool"; value: false; }
            Property { name: "font.pixelSize"; type: "int"; value: 16; }
            Property { name: "textOnColor"; type: "string"; value: "Black"; }
            Property { name: "textOffColor"; type: "string"; value: "Black"; }
        }
    }

Type {
        name: "VerticalSlider"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Slider - Vertical"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"
            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 48; }
            Property { name: "height"; type: "int"; value: 184; }
            Property { name: "allowDrag"; type: "bool"; value: "true"; }
            Property { name: "imageTrack"; type: "QUrl"; value: "images/slider_track.bmp"; }
            Property { name: "imageHandle"; type: "QUrl"; value: "images/slider_handle.png"; }
            Property { name: "minimum"; type: "int"; value: 0; }
            Property { name: "maximum"; type: "int"; value: 10; }
            Property { name: "value"; type: "int"; value: 0; }
            Property { name: "yMin"; type: "int"; value: 2; }
            Property { name: "handleX"; type: "int"; value: 0; }
        }
    }

Type {
        name: "HorizontalSlider"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Slider - Horizontal"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"
            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 184; }
            Property { name: "height"; type: "int"; value: 48; }
            Property { name: "allowDrag"; type: "bool"; value: "true"; }
            Property { name: "imageTrack"; type: "QUrl"; value: "images/slider_htrack.png"; }
            Property { name: "imageHandle"; type: "QUrl"; value: "images/slider_handle.png"; }
            Property { name: "minimum"; type: "int"; value: 0; }
            Property { name: "maximum"; type: "int"; value: 10; }
            Property { name: "value"; type: "int"; value: 0; }
            Property { name: "xMin"; type: "int"; value: 0; }
            Property { name: "handleY"; type: "int"; value: 2; }
        }
    }

Type {
        name: "Knob"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Knob"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"
            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 180; }
            Property { name: "height"; type: "int"; value: 180; }
            Property { name: "initialIndex"; type: "int"; value: 0; }
            Property { name: "add"; type: "bool"; value: false; }
            Property { name: "remove"; type: "bool"; value: false; }
            Property { name: "textColor"; type: "color"; value: "White"; }
            Property { name: "imageBase"; type: "string"; value: "images/dialbase.png"; }
            Property { name: "imageBaseWidth"; type: "int"; value: 108; }
            Property { name: "imageBaseHeight"; type: "int"; value: 108; }
            Property { name: "imageNeedle"; type: "string"; value: "images/dialneedle.png"; }
            Property { name: "imageNeedleWidth"; type: "int"; value: 108; }
            Property { name: "imageNeedleHeight"; type: "int"; value: 108; }
            Property { name: "font.family"; type: "string"; value: "Arial"; }
            Property { name: "font.bold"; type: "bool"; value: false; }
            Property { name: "font.pixelSize"; type: "int"; value: 16; }
            Property { name: "mouseAreaHeight"; type: "int"; value: 77; }
            Property { name: "mouseAreaWidth"; type: "int"; value: 77; }
        }
    }

Type {
        name: "VUMeter"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "VU Meter"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"
            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 377; }
            Property { name: "height"; type: "int"; value: 242; }
            Property { name: "backgroundImage"; type: "string"; value: "images/vu_background.png"; }
            Property { name: "needleImage"; type: "string"; value: "images/vu_needle.png"; }
            Property { name: "needleImageWidth"; type: "int"; value: 8; }
            Property { name: "needleImageHeight"; type: "int"; value: 139; }
            Property { name: "needleX"; type: "int"; value: 181; }
            Property { name: "needleY"; type: "int"; value: 57; }
            Property { name: "needleRotationX"; type: "int"; value: 4; }
            Property { name: "needleRotationY"; type: "int"; value: 139; }
            Property { name: "overlayImage"; type: "string"; value: "images/vu_overlay.png"; }
            Property { name: "overlayImageWidth"; type: "int"; value: 39; }
            Property { name: "overlayImageHeight"; type: "int"; value: 26; }
            Property { name: "overlayX"; type: "int"; value: 168; }
            Property { name: "overlayY"; type: "int"; value: 191; }
            Property { name: "value"; type: "int"; value: 0; }
        }
    }

Type {
        name: "Spedometer"
        icon: "item-icon16.png"

        ItemLibraryEntry {
            name: "Spedometer"
            category: "Reach Components"
            libraryIcon: "item-icon.png"
            forceImport: "true"
            requiredImport: "components"
            Property { name: "width"; type: "int"; value: 210; }
            Property { name: "height"; type: "int"; value: 210; }
            Property { name: "backgroundImage"; type: "string"; value: "images/meterbackground.png"; }
            Property { name: "needleImage"; type: "string"; value: "images/needle.png"; }
            Property { name: "needleImageWidth"; type: "int"; value: 8; }
            Property { name: "needleImageHeight"; type: "int"; value: 63; }
            Property { name: "needleX"; type: "int"; value: 98; }
            Property { name: "needleY"; type: "int"; value: 33; }
            Property { name: "needleRotationX"; type: "int"; value: 5; }
            Property { name: "needleRotationY"; type: "int"; value: 65; }
            Property { name: "overlayImage"; type: "string"; value: "images/overlay.png"; }
            Property { name: "overlayImageWidth"; type: "int"; value: 148; }
            Property { name: "overlayImageHeight"; type: "int"; value: 105; }
            Property { name: "overlayX"; type: "int"; value: 21; }
            Property { name: "overlayY"; type: "int"; value: 18; }
            Property { name: "value"; type: "int"; value: 0; }
            Property { name: "min"; type: "int"; value: 0; }
            Property { name: "max"; type: "int"; value: 120; }
            Property { name: "maxAngle"; type: "real"; value: 133.0; }


        }
    }

}
